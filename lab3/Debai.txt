Requirements:
Improve the simple C++ student management program from Lab 2. For this week you need to keep the information of each student's name and score in a class and maintain the list of student objects in a dynamically allocated array using a pointer.
(1) Create the Student Class that stores name and score. Make sure to have a constructor and destructor. (2) Use C++ dynamic array data structure using pointers to store a list of all the student objects.
(3) Implement a function that allows users to create and add a new student object to the list of students (remember to use constructor through 'new' keyword).
(4) Implement a function to display the list of all students and their scores.
(5) Implement a function to display the best student(s)'s name(s) and their score(s) (there could be more than one student who has the same highest score).
(6) Implement a function to remove a student from the list based on the name input (remember to use destructor through 'delete' keyword)
(7) Use C++ WHILE loop to create a text-based menu that allows users to choose the above functionalities or to exit the program.
Submission:
Create a zip file of all your .cpp and .h project files.
Make sure to name your zip file using the following format [StudentID]_[StudentFullName]_[ClassName]_Lab3.zip
Submit your zip file before the deadline using the corresponding link on Moodle for your class (each class has a different deadline).
Resources:
(1) Weekly slides & Youtube Videos at Cat Can Code & Meo Lap Trinh channels
(2) C++ How to Program, 9th Edition, Paul Deitel
(3) Object-Oriented Programming in C++, 4th Edition, Robert Lafore
(4) http://www.cplusplus.com/doc/tutorial/dynamic/
(5) https://www.geeksforgeeks.org/pointers-vs-references-cpp/
(6) https://www.cplusplus.com/doc/tutorial/classes/
(7) https://www.geeksforgeeks.org/destructors-c/
(8) https://www.geeksforgeeks.org/how-to-initialize-array-of-objects-with-parameterized-constructors-in-