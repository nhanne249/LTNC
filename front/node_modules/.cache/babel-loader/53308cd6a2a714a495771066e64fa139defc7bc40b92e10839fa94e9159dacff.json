{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vunha\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\HCMUTMaterials\\\\LTNC\\\\assignment\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { publicRouter, privateRouter } from \"./config/routes\";\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const role = useSelector((state) => state.login.role);\n  const role = \"admin\";\n  // lấy key session đầu tiên trong local\n  const getfirstSession = () => {\n    const allKeys = Object.keys(localStorage);\n    const firstKey = allKeys.find(key => key.includes(\"userSession\"));\n    return firstKey;\n  };\n  // lưu session khi copy URL qua tab khác \n  useEffect(() => {\n    //cookie sẽ bị xóa sau khi trình duyệt đóng, check để clear toàn bộ session\n    if (Cookies.get('isBrowserClose') === undefined) localStorage.clear();\n    const firstKey = getfirstSession();\n    let newnameSession = '';\n    Cookies.set('isBrowserClose', false);\n    //gán ngược từ session vào lại local (xử lý việc reload mất local))\n    if (!firstKey && sessionStorage.getItem('userPresent')) {\n      const {\n        id,\n        token\n      } = JSON.parse(sessionStorage.getItem('userPresent'));\n      newnameSession = \"userSession\" + Math.floor(Date.now() / 1000) % 100000; //uniquê key for 27hour\n      localStorage.setItem(newnameSession, JSON.stringify({\n        id: id,\n        token: token\n      }));\n    }\n    //nếu không có session thì gán local cho session\n    if (firstKey && !sessionStorage.getItem('userPresent')) {\n      const {\n        id,\n        token\n      } = JSON.parse(localStorage.getItem(firstKey));\n      newnameSession = \"userSession\" + Math.floor(Date.now() / 1000) % 100000;\n      sessionStorage.setItem('userPresent', JSON.stringify({\n        id: id,\n        token: token\n      }));\n      localStorage.setItem(newnameSession, JSON.stringify({\n        id: id,\n        token: token\n      }));\n    }\n    // Hàm xử lý khi có tin nhắn được gửi từ tab khác\n    const message_receive = event => {\n      if (Cookies.get('isBrowserClose')) {\n        if (event.key === 'SessionMessage') {\n          if (JSON.parse(event.newValue)) {\n            //(xử lý khi giữ lại local để freememory)\n            if (!getfirstSession()) {\n              const {\n                id,\n                token\n              } = JSON.parse(event.newValue);\n              newnameSession = \"userSession\" + Math.floor(Date.now() / 1000) % 100000;\n              localStorage.setItem(newnameSession, JSON.stringify({\n                id: id,\n                token: token\n              }));\n            }\n          }\n        } else if (event.key === 'ClearMessage') {\n          sessionStorage.removeItem('userPresent');\n        }\n      }\n    };\n    // Hàm xử lý trước khi người dùng rời khỏi trang\n    const handleBeforeUnload = () => {\n      //có thể comment dòng này (để thì có thể tăng hiệu suất lúc tải trang lần đầu)\n      localStorage.removeItem(newnameSession ? newnameSession : 'userSession');\n      // Gửi tin nhắn trước khi tab bị đóng\n      sendMessage();\n    };\n    const handleLoad = () => {\n      freeMemoryLocal();\n    };\n    //Giải phóng bộ nhớ local khi quá nhiều (limit 5)\n    const freeMemoryLocal = () => {\n      const allKeys = Object.keys(localStorage);\n      const userSessionKeys = allKeys.filter(key => key.includes(\"userSession\"));\n      if (userSessionKeys.length >= 5) {\n        const keysToDelete = userSessionKeys.slice(0, Math.floor(userSessionKeys.length / 2));\n        keysToDelete.forEach(key => {\n          localStorage.removeItem(key);\n        });\n      }\n    };\n    // Lắng nghe sự kiện storage\n    window.addEventListener('storage', message_receive);\n    // Lắng nghe sự kiện beforeunload \n    window.addEventListener('beforeunload', handleBeforeUnload);\n    // Lắng nghe sự kiện load\n    window.addEventListener('load', handleLoad);\n    return () => {\n      // Gỡ lắng nghe sự khi component unmounted\n      window.removeEventListener('storage', message_receive);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('load', handleLoad);\n    };\n  }, []);\n  // Giao tiếp với các tab khác để lưu trữ session\n  const sendMessage = () => {\n    localStorage.setItem('SessionMessage', JSON.stringify(JSON.parse(sessionStorage.getItem('userPresent'))));\n    localStorage.removeItem('SessionMessage');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [publicRouter.map(routers => {\n          return routers.map((route, index) => {\n            return /*#__PURE__*/_jsxDEV(Route, {\n              path: route.path,\n              element: route.element,\n              children: [route.index ? /*#__PURE__*/_jsxDEV(Route, {\n                index: true,\n                element: route.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 34\n              }, this) : null, route.children ? route.children.map(({\n                path,\n                Component\n              }, index) => {\n                return /*#__PURE__*/_jsxDEV(Route, {\n                  path: path,\n                  element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 36\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this);\n              }) : null]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this);\n          });\n        }), privateRouter.map(routers => {\n          return routers.map((route, index) => {\n            return route.role === role || route.role === \"admin\" ? /*#__PURE__*/_jsxDEV(Route, {\n              path: route.path,\n              element: route.element,\n              children: [route.index ? /*#__PURE__*/_jsxDEV(Route, {\n                index: true,\n                element: route.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 34\n              }, this) : null, route.children ? route.children.map(({\n                path,\n                Component\n              }, index) => {\n                console.log('succeeded');\n                return /*#__PURE__*/_jsxDEV(Route, {\n                  path: path,\n                  element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 36\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this);\n              }) : null]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this) : null;\n          });\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useEffect","ToastContainer","publicRouter","privateRouter","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","role","getfirstSession","allKeys","Object","keys","localStorage","firstKey","find","key","includes","get","undefined","clear","newnameSession","set","sessionStorage","getItem","id","token","JSON","parse","Math","floor","Date","now","setItem","stringify","message_receive","event","newValue","removeItem","handleBeforeUnload","sendMessage","handleLoad","freeMemoryLocal","userSessionKeys","filter","length","keysToDelete","slice","forEach","window","addEventListener","removeEventListener","children","map","routers","route","index","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Component","console","log","_c","$RefreshReg$"],"sources":["C:/Users/vunha/OneDrive/Máy tính/HCMUTMaterials/LTNC/assignment/front/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useEffect} from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { publicRouter, privateRouter } from \"./config/routes\";\nimport Cookies from 'js-cookie';\nfunction App() {\n  // const role = useSelector((state) => state.login.role);\n  const role = \"admin\";\n  // lấy key session đầu tiên trong local\n  const getfirstSession = () => {\n    const allKeys = Object.keys(localStorage);\n    const firstKey = allKeys.find(key => key.includes(\"userSession\"));\n    return firstKey\n  }\n  // lưu session khi copy URL qua tab khác \n  useEffect(() => {\n    //cookie sẽ bị xóa sau khi trình duyệt đóng, check để clear toàn bộ session\n    if (Cookies.get('isBrowserClose') === undefined)\n      localStorage.clear()\n    const firstKey = getfirstSession()\n    let newnameSession = ''\n    Cookies.set('isBrowserClose', false);\n    //gán ngược từ session vào lại local (xử lý việc reload mất local))\n    if (!firstKey && sessionStorage.getItem('userPresent')) {\n      const { id, token } = JSON.parse(sessionStorage.getItem('userPresent'))\n      newnameSession = \"userSession\" + (Math.floor(Date.now() / 1000)) % 100000 //uniquê key for 27hour\n      localStorage.setItem(\n        newnameSession,\n        JSON.stringify(\n          {\n            id: id,\n            token: token,\n          }\n        )\n      )\n    }\n    //nếu không có session thì gán local cho session\n    if (firstKey && (!sessionStorage.getItem('userPresent'))) {\n      const { id, token } = JSON.parse(localStorage.getItem(firstKey))\n      newnameSession = \"userSession\" + (Math.floor(Date.now() / 1000)) % 100000\n      sessionStorage.setItem(\n        'userPresent',\n        JSON.stringify({\n          id: id,\n          token: token\n        })\n      );\n      localStorage.setItem(\n        newnameSession,\n        JSON.stringify({\n          id: id,\n          token: token\n        })\n      )\n    }\n    // Hàm xử lý khi có tin nhắn được gửi từ tab khác\n    const message_receive = (event) => {\n      if (Cookies.get('isBrowserClose')) {\n        if (event.key === 'SessionMessage') {\n          if (JSON.parse(event.newValue)) {\n            //(xử lý khi giữ lại local để freememory)\n            if (!getfirstSession()) {\n              const { id, token } = JSON.parse(event.newValue);\n              newnameSession = \"userSession\" + (Math.floor(Date.now() / 1000)) % 100000\n              localStorage.setItem(\n                newnameSession,\n                JSON.stringify({\n                  id: id,\n                  token: token\n                }))\n            }\n          }\n        } else if (event.key === 'ClearMessage') {\n          sessionStorage.removeItem('userPresent');\n        }\n      }\n    };\n    // Hàm xử lý trước khi người dùng rời khỏi trang\n    const handleBeforeUnload = () => {\n      //có thể comment dòng này (để thì có thể tăng hiệu suất lúc tải trang lần đầu)\n      localStorage.removeItem(newnameSession ? newnameSession : 'userSession')\n      // Gửi tin nhắn trước khi tab bị đóng\n      sendMessage();\n    };\n    const handleLoad = () => {\n      freeMemoryLocal();\n    };\n    //Giải phóng bộ nhớ local khi quá nhiều (limit 5)\n    const freeMemoryLocal = () => {\n      const allKeys = Object.keys(localStorage);\n      const userSessionKeys = allKeys.filter(key => key.includes(\"userSession\"));\n      if (userSessionKeys.length >= 5) {\n        const keysToDelete = userSessionKeys.slice(0, Math.floor((userSessionKeys.length) / 2));\n        keysToDelete.forEach(key => {\n          localStorage.removeItem(key);\n        });\n      }\n    }\n    // Lắng nghe sự kiện storage\n    window.addEventListener('storage', message_receive);\n    // Lắng nghe sự kiện beforeunload \n    window.addEventListener('beforeunload', handleBeforeUnload);\n    // Lắng nghe sự kiện load\n    window.addEventListener('load', handleLoad);\n    return () => {\n      // Gỡ lắng nghe sự khi component unmounted\n      window.removeEventListener('storage', message_receive);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('load', handleLoad);\n    };\n  }, []);\n  // Giao tiếp với các tab khác để lưu trữ session\n  const sendMessage = () => {\n    localStorage.setItem('SessionMessage', JSON.stringify(\n      JSON.parse(sessionStorage.getItem('userPresent'))));\n    localStorage.removeItem('SessionMessage');\n  };\n\n  return (\n    <>\n      <Router>\n        <Routes>\n          {publicRouter.map((routers) => {\n            return routers.map((route, index) => {\n              return (\n                <Route path={route.path} element={route.element} key={index}>\n                  {route.index ? <Route index element={route.index} /> : null}\n                  {route.children\n                    ? route.children.map(({ path, Component }, index) => {\n                      return (\n                        <Route\n                          path={path}\n                          element={<Component />}\n                          key={index}\n                        />\n                      );\n                    })\n                    : null}\n                </Route>\n              );\n            });\n          })}\n          {privateRouter.map((routers) => {\n            return routers.map((route, index) => {\n              return route.role === role || route.role === \"admin\" ? (\n                <Route path={route.path} element={route.element} key={index}>\n                  {route.index ? <Route index element={route.index} /> : null}\n                  {route.children\n                    ? route.children.map(({ path, Component }, index) => {\n                      console.log('succeeded');\n                      return (\n                        <Route\n                          path={path}\n                          element={<Component/> }\n                          key={index}\n                        />\n                      );\n                    })\n                    : null}\n                </Route>\n              ) : null;\n            });\n          })}\n        </Routes>\n      </Router>\n      {/* <Loading /> */}\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}